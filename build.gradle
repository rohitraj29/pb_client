plugins {
    id 'java'

}

group 'org.example'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.3.1'
    // https://mvnrepository.com/artifact/org.apache.avro/avro
    implementation 'org.apache.avro:avro:1.11.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.14.1'
    // https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
    implementation 'io.confluent:kafka-avro-serializer:7.3.0'
    // https://mvnrepository.com/artifact/io.confluent/kafka-schema-registry-client
    implementation 'io.confluent:kafka-schema-registry-client:7.3.0'
    // https://mvnrepository.com/artifact/io.confluent/kafka-streams-avro-serde
    implementation 'io.confluent:kafka-streams-avro-serde:7.3.0'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    implementation 'software.amazon.glue:schema-registry-serde:1.1.14'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.example.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}